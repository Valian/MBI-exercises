
R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(data.table)
> library(parallel)
> library(RCurl)
Loading required package: bitops
> library(gdata)
gdata: read.xls support for 'XLS' (Excel 97-2004) files ENABLED.

gdata: Unable to load perl libaries needed by read.xls()
gdata: to support 'XLSX' (Excel 2007+) files.

gdata: Run the function 'installXLSXsupport()'
gdata: to automatically download and install the perl
gdata: libaries needed to support Excel XLS and XLSX formats.

Attaching package: ‘gdata’

The following objects are masked from ‘package:data.table’:

    first, last

The following object is masked from ‘package:stats’:

    nobs

The following object is masked from ‘package:utils’:

    object.size

The following object is masked from ‘package:base’:

    startsWith

> library(Hmisc)
Loading required package: lattice
Loading required package: survival
Loading required package: Formula
Loading required package: ggplot2

Attaching package: ‘Hmisc’

> library(matrixStats)
The following objects are masked from ‘package:base’:

    format.pval, units

> library(DNAcopy)
> library(GenomicRanges)
Loading required package: stats4
Loading required package: BiocGenerics

Attaching package: ‘BiocGenerics’

The following object is masked from ‘package:gdata’:

    combine

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:gdata’:

    first, first<-

The following objects are masked from ‘package:data.table’:

    first, second

The following object is masked from ‘package:base’:

    expand.grid

Loading required package: IRanges

Attaching package: ‘IRanges’

The following object is masked from ‘package:gdata’:

    trim

The following object is masked from ‘package:data.table’:

    shift

Loading required package: GenomeInfoDb
> library(Rsubread)
> library(WES.1KG.WUGSC)
> library(CODEX)
Loading required package: Rsamtools
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following objects are masked from ‘package:Hmisc’:

    mask, translate

The following object is masked from ‘package:base’:

    strsplit

Loading required package: BSgenome.Hsapiens.UCSC.hg19
Loading required package: BSgenome
Loading required package: rtracklayer

Attaching package: ‘CODEX’

The following object is masked from ‘package:BiocGenerics’:

    normalize

The following object is masked from ‘package:DNAcopy’:

    segment

> 
> #set number of available cores
> cores <- 4
> 
> # get list of BAM files
> dirPath <- system.file("extdata", package = "WES.1KG.WUGSC")
> bamFile <- list.files(dirPath, pattern = '*.bam$')
> nrow(bamFile) # there is 100 BAM files
NULL
> bamFile
 [1] "NA06994.mapped.ILLUMINA.bwa.CEU.exome.20120522.bam.chr22.sorted.bam"
 [2] "NA10847.mapped.ILLUMINA.bwa.CEU.exome.20121211.bam.chr22.sorted.bam"
 [3] "NA11840.mapped.ILLUMINA.bwa.CEU.exome.20120522.bam.chr22.sorted.bam"
 [4] "NA12249.mapped.ILLUMINA.bwa.CEU.exome.20120522.bam.chr22.sorted.bam"
 [5] "NA12716.mapped.ILLUMINA.bwa.CEU.exome.20121211.bam.chr22.sorted.bam"
 [6] "NA12750.mapped.ILLUMINA.bwa.CEU.exome.20130415.bam.chr22.sorted.bam"
 [7] "NA12751.mapped.ILLUMINA.bwa.CEU.exome.20121211.bam.chr22.sorted.bam"
 [8] "NA12760.mapped.ILLUMINA.bwa.CEU.exome.20120522.bam.chr22.sorted.bam"
 [9] "NA12761.mapped.ILLUMINA.bwa.CEU.exome.20121211.bam.chr22.sorted.bam"
[10] "NA12763.mapped.ILLUMINA.bwa.CEU.exome.20121211.bam.chr22.sorted.bam"
[11] "NA18966.mapped.ILLUMINA.bwa.JPT.exome.20121211.bam.chr22.sorted.bam"
[12] "NA18967.mapped.ILLUMINA.bwa.JPT.exome.20121211.bam.chr22.sorted.bam"
[13] "NA18968.mapped.ILLUMINA.bwa.JPT.exome.20120522.bam.chr22.sorted.bam"
[14] "NA18969.mapped.ILLUMINA.bwa.JPT.exome.20120522.bam.chr22.sorted.bam"
[15] "NA18970.mapped.ILLUMINA.bwa.JPT.exome.20120522.bam.chr22.sorted.bam"
[16] "NA18971.mapped.ILLUMINA.bwa.JPT.exome.20120522.bam.chr22.sorted.bam"
[17] "NA18972.mapped.ILLUMINA.bwa.JPT.exome.20121211.bam.chr22.sorted.bam"
[18] "NA18973.mapped.ILLUMINA.bwa.JPT.exome.20121211.bam.chr22.sorted.bam"
[19] "NA18974.mapped.ILLUMINA.bwa.JPT.exome.20120522.bam.chr22.sorted.bam"
[20] "NA18975.mapped.ILLUMINA.bwa.JPT.exome.20120522.bam.chr22.sorted.bam"
[21] "NA18976.mapped.ILLUMINA.bwa.JPT.exome.20120522.bam.chr22.sorted.bam"
[22] "NA18981.mapped.ILLUMINA.bwa.JPT.exome.20120522.bam.chr22.sorted.bam"
[23] "NA18987.mapped.ILLUMINA.bwa.JPT.exome.20120522.bam.chr22.sorted.bam"
[24] "NA18990.mapped.ILLUMINA.bwa.JPT.exome.20120522.bam.chr22.sorted.bam"
[25] "NA18991.mapped.ILLUMINA.bwa.JPT.exome.20120522.bam.chr22.sorted.bam"
[26] "NA19098.mapped.ILLUMINA.bwa.YRI.exome.20121211.bam.chr22.sorted.bam"
[27] "NA19119.mapped.ILLUMINA.bwa.YRI.exome.20120522.bam.chr22.sorted.bam"
[28] "NA19131.mapped.ILLUMINA.bwa.YRI.exome.20120522.bam.chr22.sorted.bam"
[29] "NA19137.mapped.ILLUMINA.bwa.YRI.exome.20130415.bam.chr22.sorted.bam"
[30] "NA19138.mapped.ILLUMINA.bwa.YRI.exome.20121211.bam.chr22.sorted.bam"
[31] "NA19141.mapped.ILLUMINA.bwa.YRI.exome.20120522.bam.chr22.sorted.bam"
[32] "NA19143.mapped.ILLUMINA.bwa.YRI.exome.20120522.bam.chr22.sorted.bam"
[33] "NA19144.mapped.ILLUMINA.bwa.YRI.exome.20121211.bam.chr22.sorted.bam"
[34] "NA19152.mapped.ILLUMINA.bwa.YRI.exome.20120522.bam.chr22.sorted.bam"
[35] "NA19153.mapped.ILLUMINA.bwa.YRI.exome.20121211.bam.chr22.sorted.bam"
[36] "NA19159.mapped.ILLUMINA.bwa.YRI.exome.20121211.bam.chr22.sorted.bam"
[37] "NA19160.mapped.ILLUMINA.bwa.YRI.exome.20120522.bam.chr22.sorted.bam"
[38] "NA19171.mapped.ILLUMINA.bwa.YRI.exome.20120522.bam.chr22.sorted.bam"
[39] "NA19200.mapped.ILLUMINA.bwa.YRI.exome.20120522.bam.chr22.sorted.bam"
[40] "NA19201.mapped.ILLUMINA.bwa.YRI.exome.20121211.bam.chr22.sorted.bam"
[41] "NA19204.mapped.ILLUMINA.bwa.YRI.exome.20120522.bam.chr22.sorted.bam"
[42] "NA19206.mapped.ILLUMINA.bwa.YRI.exome.20121211.bam.chr22.sorted.bam"
[43] "NA19207.mapped.ILLUMINA.bwa.YRI.exome.20121211.bam.chr22.sorted.bam"
[44] "NA19209.mapped.ILLUMINA.bwa.YRI.exome.20121211.bam.chr22.sorted.bam"
[45] "NA19210.mapped.ILLUMINA.bwa.YRI.exome.20121211.bam.chr22.sorted.bam"
[46] "NA19223.mapped.ILLUMINA.bwa.YRI.exome.20120522.bam.chr22.sorted.bam"
> 
> # get samples names
> bamdir <- file.path(dirPath, bamFile)
> sampname <- as.matrix(read.table(file.path(dirPath, "sampname")))
> nrow(sampname) 
[1] 46
> sampname 
      V1       
 [1,] "NA06994"
 [2,] "NA10847"
 [3,] "NA11840"
 [4,] "NA12249"
 [5,] "NA12716"
 [6,] "NA12750"
 [7,] "NA12751"
 [8,] "NA12760"
 [9,] "NA12761"
[10,] "NA12763"
[11,] "NA18966"
[12,] "NA18967"
[13,] "NA18968"
[14,] "NA18969"
[15,] "NA18970"
[16,] "NA18971"
[17,] "NA18972"
[18,] "NA18973"
[19,] "NA18974"
[20,] "NA18975"
[21,] "NA18976"
[22,] "NA18981"
[23,] "NA18987"
[24,] "NA18990"
[25,] "NA18991"
[26,] "NA19098"
[27,] "NA19119"
[28,] "NA19131"
[29,] "NA19137"
[30,] "NA19138"
[31,] "NA19141"
[32,] "NA19143"
[33,] "NA19144"
[34,] "NA19152"
[35,] "NA19153"
[36,] "NA19159"
[37,] "NA19160"
[38,] "NA19171"
[39,] "NA19200"
[40,] "NA19201"
[41,] "NA19204"
[42,] "NA19206"
[43,] "NA19207"
[44,] "NA19209"
[45,] "NA19210"
[46,] "NA19223"
> 
> # read BED file
> bedFile <- file.path(dirPath, "chr22_400_to_500.bed")
> bedFile # the file has information for 100 regions of 22th chormosome
[1] "/usr/local/lib/R/site-library/WES.1KG.WUGSC/extdata/chr22_400_to_500.bed"
> fread(bedFile) # the file has information for 100 regions of 22th chormosome
     V1       V2       V3
  1: 22 21345867 21346168
  2: 22 21346453 21346708
  3: 22 21347033 21347243
  4: 22 21347901 21348093
  5: 22 21348163 21348608
  6: 22 21348797 21349066
  7: 22 21349109 21349365
  8: 22 21349985 21350451
  9: 22 21350935 21351305
 10: 22 21351471 21351687
 11: 22 21354119 21354771
 12: 22 21354886 21355126
 13: 22 21355495 21355750
 14: 22 21356071 21356250
 15: 22 21369444 21369677
 16: 22 21370181 21370431
 17: 22 21372227 21372399
 18: 22 21376914 21377090
 19: 22 21377181 21377957
 20: 22 21380044 21380237
 21: 22 21380249 21380415
 22: 22 21380490 21380956
 23: 22 21383294 21383569
 24: 22 21383575 21383783
 25: 22 21383950 21384690
 26: 22 21385070 21386151
 27: 22 21797070 21797196
 28: 22 21799161 21801082
 29: 22 21921983 21922110
 30: 22 21947100 21947295
 31: 22 21965096 21965382
 32: 22 21975754 21976008
 33: 22 21982657 21983126
 34: 22 21983249 21983526
 35: 22 21983547 21983746
 36: 22 21983841 21984353
 37: 22 21987420 21987592
 38: 22 21988261 21988909
 39: 22 21988924 21989605
 40: 22 21990671 21991352
 41: 22 21996576 21996862
 42: 22 21997101 21997397
 43: 22 21998133 21998514
 44: 22 22020338 22020470
 45: 22 22024151 22024301
 46: 22 22024804 22024950
 47: 22 22025235 22025398
 48: 22 22026568 22026720
 49: 22 22029302 22029454
 50: 22 22035538 22035729
 51: 22 22036676 22036865
 52: 22 22037420 22037596
 53: 22 22038992 22039252
 54: 22 22040721 22040897
 55: 22 22041131 22041337
 56: 22 22041882 22042071
 57: 22 22042311 22042445
 58: 22 22042971 22043188
 59: 22 22048054 22048211
 60: 22 22048831 22049156
 61: 22 22049176 22049409
 62: 22 22049633 22049829
 63: 22 22055368 22055557
 64: 22 22057609 22057817
 65: 22 22058077 22058221
 66: 22 22064867 22065083
 67: 22 22123443 22123659
 68: 22 22127112 22127321
 69: 22 22142496 22142727
 70: 22 22142933 22143147
 71: 22 22153251 22153467
 72: 22 22160089 22160378
 73: 22 22161903 22162185
 74: 22 22221562 22221768
 75: 22 22277415 22277894
 76: 22 22279892 22280085
 77: 22 22285470 22285712
 78: 22 22287713 22288001
 79: 22 22288346 22288648
 80: 22 22293854 22294102
 81: 22 22300165 22300470
 82: 22 22311436 22312017
 83: 22 22312814 22313115
 84: 22 22313454 22313654
 85: 22 22313909 22314158
 86: 22 22314643 22314871
 87: 22 22316751 22317024
 88: 22 22317069 22317315
 89: 22 22318245 22318450
 90: 22 22318483 22318737
 91: 22 22319607 22319797
 92: 22 22321925 22322138
 93: 22 22322941 22323197
 94: 22 22324532 22324828
 95: 22 22326198 22326373
 96: 22 22326934 22327140
 97: 22 22328679 22328910
 98: 22 22329961 22330131
 99: 22 22599175 22599725
100: 22 22842042 22843773
     V1       V2       V3
> 
> # calc coverage
> chr <- 22
> bambedObj <- getbambed(bamdir = bamdir, bedFile = bedFile,
+             sampname = sampname, projectname = "CODEX_demo", chr)
> bamdir <- bambedObj$bamdir; sampname <- bambedObj$sampname
> ref <- bambedObj$ref; projectname <- bambedObj$projectname; chr <- bambedObj$chr
> coverageObj <- getcoverage(bambedObj, mapqthres = 20)
Getting coverage for sample NA06994: read length 100.
Getting coverage for sample NA10847: read length 100.
Getting coverage for sample NA11840: read length 100.
Getting coverage for sample NA12249: read length 100.
Getting coverage for sample NA12716: read length 100.
Getting coverage for sample NA12750: read length 100.
Getting coverage for sample NA12751: read length 100.
Getting coverage for sample NA12760: read length 100.
Getting coverage for sample NA12761: read length 100.
Getting coverage for sample NA12763: read length 100.
Getting coverage for sample NA18966: read length 100.
Getting coverage for sample NA18967: read length 100.
Getting coverage for sample NA18968: read length 100.
Getting coverage for sample NA18969: read length 100.
Getting coverage for sample NA18970: read length 100.
Getting coverage for sample NA18971: read length 100.
Getting coverage for sample NA18972: read length 100.
Getting coverage for sample NA18973: read length 100.
Getting coverage for sample NA18974: read length 100.
Getting coverage for sample NA18975: read length 100.
Getting coverage for sample NA18976: read length 100.
Getting coverage for sample NA18981: read length 100.
Getting coverage for sample NA18987: read length 100.
Getting coverage for sample NA18990: read length 100.
Getting coverage for sample NA18991: read length 100.
Getting coverage for sample NA19098: read length 100.
Getting coverage for sample NA19119: read length 100.
Getting coverage for sample NA19131: read length 100.
Getting coverage for sample NA19137: read length 100.
Getting coverage for sample NA19138: read length 100.
Getting coverage for sample NA19141: read length 100.
Getting coverage for sample NA19143: read length 100.
Getting coverage for sample NA19144: read length 100.
Getting coverage for sample NA19152: read length 100.
Getting coverage for sample NA19153: read length 100.
Getting coverage for sample NA19159: read length 100.
Getting coverage for sample NA19160: read length 100.
Getting coverage for sample NA19171: read length 100.
Getting coverage for sample NA19200: read length 100.
Getting coverage for sample NA19201: read length 100.
Getting coverage for sample NA19204: read length 100.
Getting coverage for sample NA19206: read length 100.
Getting coverage for sample NA19207: read length 100.
Getting coverage for sample NA19209: read length 100.
Getting coverage for sample NA19210: read length 100.
Getting coverage for sample NA19223: read length 100.
> Y <- coverageObj$Y; readlength <- coverageObj$readlength
> dim(Y) # 100 próbek x 46 plików - macierz integerów - liczby odczytów dla każdego ze 100 regionów
[1] 100  46
> #Objekt Y zawiera dane na temat liczby odczytów dla ka»dego regionu; próbki s¡ zdenio-
> #wane w kolejnych kolumnach; regiony w wierszach.
> Y_ac <- apply(Y, 2,function(x){(100*x)/width(ref)})
> colnames(Y_ac) <- sampname
> 
> # print coverage depth statistics
> apply(Y_ac, 2, median)
 NA06994  NA10847  NA11840  NA12249  NA12716  NA12750  NA12751  NA12760 
23.37419 24.36166 25.19016 24.72429 24.96893 64.69497 25.03369 26.55172 
 NA12761  NA12763  NA18966  NA18967  NA18968  NA18969  NA18970  NA18971 
23.34145 21.22501 24.67311 25.62530 25.00060 22.78646 25.76636 25.61711 
 NA18972  NA18973  NA18974  NA18975  NA18976  NA18981  NA18987  NA18990 
21.26514 21.20246 24.12713 23.31715 25.00000 24.00673 22.42314 27.56757 
 NA18991  NA19098  NA19119  NA19131  NA19137  NA19138  NA19141  NA19143 
21.06271 24.31317 27.22705 28.04514 76.03475 26.05263 23.21683 26.58317 
 NA19144  NA19152  NA19153  NA19159  NA19160  NA19171  NA19200  NA19201 
26.90452 27.60749 26.48438 27.14001 25.08008 32.39873 27.55037 30.58270 
 NA19204  NA19206  NA19207  NA19209  NA19210  NA19223 
23.84016 27.87084 25.39129 30.89185 26.37629 26.55172 
> summary <- summary(apply(Y_ac, 2, median))
> summary
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  21.06   24.04   25.29   27.37   27.08   76.03 
> 
> # show sorted by median coverage
> med = apply(Y_ac, 2, median)
> med[order(med)]
 NA18991  NA18973  NA12763  NA18972  NA18987  NA18969  NA19141  NA18975 
21.06271 21.20246 21.22501 21.26514 22.42314 22.78646 23.21683 23.31715 
 NA12761  NA06994  NA19204  NA18981  NA18974  NA19098  NA10847  NA18966 
23.34145 23.37419 23.84016 24.00673 24.12713 24.31317 24.36166 24.67311 
 NA12249  NA12716  NA18976  NA18968  NA12751  NA19160  NA11840  NA19207 
24.72429 24.96893 25.00000 25.00060 25.03369 25.08008 25.19016 25.39129 
 NA18971  NA18967  NA18970  NA19138  NA19210  NA19153  NA12760  NA19223 
25.61711 25.62530 25.76636 26.05263 26.37629 26.48438 26.55172 26.55172 
 NA19143  NA19144  NA19159  NA19119  NA19200  NA18990  NA19152  NA19206 
26.58317 26.90452 27.14001 27.22705 27.55037 27.56757 27.60749 27.87084 
 NA19131  NA19201  NA19209  NA19171  NA12750  NA19137 
28.04514 30.58270 30.89185 32.39873 64.69497 76.03475 
> 
